[2798번 블랙잭]
#include <iostream>

using namespace std;

int main(){
    int N, M;
    cin >> N >> M;

    int nums[N];
    for(int i = 0; i < N; i++){
        cin >> nums[i];
    }

    int ans = -1;
    for(int i = 0; i < N-2; i++){
        int tmp;
        for(int j = i+1; j < N-1; j++){
            for(int k = j+1; k < N; k++){
                tmp = nums[i] + nums[j] + nums[k];
                if(tmp == M){
                    ans = M;
                    break;
                }else if(tmp < M && tmp > ans){
                    ans = tmp;
                }
            }
        }
    }

    cout << ans << endl;
}


[2231번 분해합]
#include <iostream>

using namespace std;

int check(int n){
    int res = n;

    while(n/10 != 0 || n%10 != 0){
        int tmp;
        tmp = n%10;
        res += tmp;
        n = n/10;
    }
    return res;
}

int main(){
    int N, ans = 0;
    cin >> N;

    for(int i = 1; i < N; i++){
        if(check(i) == N){
            ans = i;
            break;
        }
    }
    
    cout << ans << endl;
}

[7568번 덩치]
#include <iostream>

using namespace std;

int main(){
    int N;
    cin >> N;
    int person[N][3];

    for(int i = 0; i < N; i++){
        cin >> person[i][0] >> person[i][1];
        person[i][2] = 1;
    }

    for(int i = 0; i < N-1; i++){
        for(int j = i; j < N; j++){
            if(i == j) continue;

            if(person[i][0] > person[j][0] && person[i][1] > person[j][1]){
                person[j][2] += 1;
            }else if(person[i][0] < person[j][0] && person[i][1] < person[j][1]){
                person[i][2] += 1;
            }
        }
    }

    for(int i = 0; i < N-1; i++){
        cout << person[i][2] << ' ';
    }
    cout << person[N-1][2] << endl;
}


[1018번 체스판 다시 칠하기]
#include <iostream>
#include <string>

using namespace std;

int check_w(int x, int y, string *board){
    int res = 0;

    for(int i = 0; i < 8; i++){
        for(int j = 0; j < 8; j++){
            if((i+j)%2 == 0){
                if(board[i+x][j+y] != 'W') res += 1;
            }else{
                if(board[i+x][j+y] != 'B') res += 1;
            }
        }
    }
    return res;
}

int check_b(int x, int y, string *board){
    int res = 0;

    for(int i = 0; i < 8; i++){
        for(int j = 0; j < 8; j++){
            if((i+j)%2 == 0){
                if(board[i+x][j+y] != 'B') res += 1;
            }else{
                if(board[i+x][j+y] != 'W') res += 1;
            }
        }
    }
    return res;
}

int main(){
    int N, M, ans=64;
    cin >> N >> M;
    string board[N];
    
    for(int i = 0; i < N; i++){
        cin >> board[i];
    }

    for(int x = 0; x < N - 7; x++){
        for(int y = 0; y < M - 7; y++){
            int tmp_w, tmp_b, min;
            tmp_w = check_w(x, y, board);
            tmp_b = check_b(x, y, board);
            min = (tmp_w > tmp_b) ? tmp_b : tmp_w;
            ans = (min > ans) ? ans : min;
        }
    }

    cout << ans << endl;
}